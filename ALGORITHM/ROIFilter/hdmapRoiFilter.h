#pragma once#include "polygonScanConverter.h"typedef apollo::perception::PolygonScanConverter::Interval Interval;typedef apollo::perception::PolygonScanConverter::MajorDirection MajorDirection;class HdmapROIFilter {public:    /**    * @brief: Draw polygons into grids in bitmap.    */    void DrawPolygon(const std::vector<cv::Point2d> polygon, double range_, double cell_size_);    /**    * @brief: Check each point whether is in the grids within ROI.    */    bool HdmapRoiFilter(cv::Point2d point);    /**    * @brief: Get major direction. Transform polygons type to what we want.    */    MajorDirection GetMajorDirection();    /*     * @brief: Get valid x range(Major direction range)     */    void GetValidXRange(Interval *valid_x_range);private:    double range;            // We only filter point with local coordinates x, y in [-range, range] inmeters    double cell_size;        // Hight and width of grid in bitmap    double extend_dist;        // The distance extended away from the ROI boundary    std::vector<cv::Point2d> polygon;    MajorDirection major_dir;    cv::Mat binary;};